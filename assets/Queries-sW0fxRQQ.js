var T=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var r=(e,t,s)=>(T(e,t,"read from private field"),s?s.call(e):t.get(e)),w=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},_=(e,t,s,n)=>(T(e,t,"write to private field"),n?n.call(e,s):t.set(e,s),s);var i=(e,t,s)=>(T(e,t,"access private method"),s);import{ae as D,af as B,ag as U,ah as E,ai as W,aj as x,ak as o,al as u,am as V,an as J,ao as k,ap as v,aq as S,ar as O,as as $,at as z,au as d,G as h}from"./index-BEZ7m8M5.js";var a,p,b,g,j,I,R;const m=class m{constructor(t){w(this,p);w(this,g);w(this,I);w(this,a,void 0);_(this,a,B(t))}get expressionType(){}get isRawBuilder(){return!0}as(t){return new P(this,t)}$castTo(){return new m({...r(this,a)})}$notNull(){return new m(r(this,a))}withPlugin(t){return new m({...r(this,a),plugins:r(this,a).plugins!==void 0?B([...r(this,a).plugins,t]):B([t])})}toOperationNode(){return i(this,g,j).call(this,i(this,p,b).call(this))}compile(t){return i(this,I,R).call(this,i(this,p,b).call(this,t))}async execute(t){const s=i(this,p,b).call(this,t);return s.executeQuery(i(this,I,R).call(this,s),r(this,a).queryId)}};a=new WeakMap,p=new WeakSet,b=function(t){const s=t!==void 0?t.getExecutor():U;return r(this,a).plugins!==void 0?s.withPlugins(r(this,a).plugins):s},g=new WeakSet,j=function(t){return t.transformQuery(r(this,a).rawNode,r(this,a).queryId)},I=new WeakSet,R=function(t){return t.compileQuery(i(this,g,j).call(this,t),r(this,a).queryId)};let N=m;function l(e){return new N(e)}D(N,"don't await RawBuilder instances directly. To execute the query you need to call `execute`");var f,c;class P{constructor(t,s){w(this,f,void 0);w(this,c,void 0);_(this,f,t),_(this,c,s)}get expression(){return r(this,f)}get alias(){return r(this,c)}get rawBuilder(){return r(this,f)}toOperationNode(){return E.create(r(this,f).toOperationNode(),W(r(this,c))?r(this,c).toOperationNode():x.create(r(this,c)))}}f=new WeakMap,c=new WeakMap;D(P,"don't await AliasedRawBuilder instances directly. AliasedRawBuilder should never be executed directly since it's always a part of another query.");const F=Object.assign((e,...t)=>l({queryId:o(),rawNode:u.create(e,(t==null?void 0:t.map(C))??[])}),{ref(e){return l({queryId:o(),rawNode:u.createWithChild(V(e))})},val(e){return l({queryId:o(),rawNode:u.createWithChild(J(e))})},value(e){return this.val(e)},table(e){return l({queryId:o(),rawNode:u.createWithChild(k(e))})},id(...e){const t=new Array(e.length+1).fill(".");return t[0]="",t[t.length-1]="",l({queryId:o(),rawNode:u.create(t,e.map(x.create))})},lit(e){return l({queryId:o(),rawNode:u.createWithChild(v.createImmediate(e))})},literal(e){return this.lit(e)},raw(e){return l({queryId:o(),rawNode:u.createWithSql(e)})},join(e,t=F`, `){const s=new Array(2*e.length-1),n=t.toOperationNode();for(let y=0;y<e.length;++y)s[2*y]=C(e[y]),y!==e.length-1&&(s[2*y+1]=n);return l({queryId:o(),rawNode:u.createWithChildren(s)})}});function C(e){return W(e)?e.toOperationNode():J(e)}function G(e,t){const s=[];for(const{selection:n}of e.selections??[])if(S.is(n)&&O.is(n.column))s.push(A(n.column.column.name),q(t,n.column.column.name));else if(O.is(n))s.push(A(n.column.name),q(t,n.column.name));else if(E.is(n)&&x.is(n.alias))s.push(A(n.alias.name),q(t,n.alias.name));else throw new Error("can't extract column names from the select query node");return s}function A(e){return new $(v.createImmediate(e))}function q(e,t){return new $(S.create(O.create(t),z.create(e)))}function Q(e){return F`(select coalesce(json_group_array(json_object(${F.join(L(e.toOperationNode(),"agg"))})), '[]') from ${e} as agg)`}function L(e,t){try{return G(e,t)}catch{throw new Error("SQLite jsonArrayFrom and jsonObjectFrom functions can only handle explicit selections due to limitations of the json_object function. selectAll() is not allowed in the subquery.")}}const H=d.createQuery(e=>e.selectFrom("teaTypes").where("isDeleted","is not",h(!0)).selectAll()),K=d.createQuery(e=>e.selectFrom("teas").leftJoin("teaTypes","teaTypes.id","teas.teaTypeId").select(["teas.id as tea_id","teas.title as tea_title","teas.subtitle as tea_subtitle","teaTypes.name as tea_type_name"]).where("teas.isDeleted","is not",h(!0)).selectAll()),M=d.createQuery(e=>e.selectFrom("_currentInfusion").leftJoin("teas","teas.id","_currentInfusion.teaId").leftJoin("teaTypes","teaTypes.id","teas.teaTypeId").where("_currentInfusion.isDeleted","is not",h(!0)).select(["_currentInfusion.isDeleted","_currentInfusion.id","_currentInfusion.createdAt","teas.id as tea_id","teas.title as tea_title","teas.subtitle as tea_subtitle","teaTypes.name as tea_type_name"])),Z=e=>d.createQuery(t=>t.selectFrom("_currentBrews").where("_currentBrews.currentInfusionId","is",e).where("_currentBrews.isDeleted","is not",h(!0)).orderBy("order desc").selectAll());d.createQuery(e=>e.selectFrom("_currentBrews").where("_currentBrews.isDeleted","is not",h(!0)).selectAll());const ee=d.createQuery(e=>e.selectFrom("_currentBrews").where("_currentBrews.isDeleted","is not",h(!0)).orderBy("order desc").limit(1).select("order")),te=d.createQuery(e=>e.selectFrom("infusions").where("infusions.isDeleted","is not",h(!0)).orderBy("infusions.endedAt desc").selectAll("infusions").leftJoin("teas","teas.id","infusions.teaId").leftJoin("teaTypes","teaTypes.id","teas.teaTypeId").select(["teas.id as tea_id","teas.title as tea_title","teas.subtitle as tea_subtitle","teaTypes.name as tea_type_name"]).select(t=>[Q(t.selectFrom("brews").select(["brews.order","brews.length"]).whereRef("brews.infusionId","=","infusions.id").orderBy("brews.order asc")).as("brews")])),se=d.createQuery(e=>e.selectFrom("teas").where("teas.isDeleted","is not",h(!0)).leftJoin("teaTypes","teaTypes.id","teas.teaTypeId").select(["teas.id as tea_id","teas.title as title","teas.subtitle as subtitle","teaTypes.name as typeName"]).select(t=>[Q(t.selectFrom("infusions").select(["infusions.createdAt","infusions.endedAt","infusions.id"]).whereRef("infusions.teaId","=","teas.id").select(s=>[Q(s.selectFrom("brews").select(["brews.order","brews.length"]).whereRef("brews.infusionId","=","infusions.id").orderBy("brews.order asc")).as("brews")])).as("infusions")]));export{te as a,Z as b,H as c,K as d,M as e,ee as l,se as t};
